[metadata]
name = dataset-format-benchmark
version = 0.2.1
description = Image dataset format benchmark
author = Oleg Korsak
author_email = kamikaze.is.waiting.you@gmail.com
license = gpl-3
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/kamikaze/dataset-format-benchmark
project_urls =
    Documentation = https://github.com/kamikaze/dataset-format-benchmark/wiki
platforms = any
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires = pyscaffold>=3.2a0,<3.3a0
# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    Cython==3.0.11
    h5py==3.12.1
    imageio[freeimage,pillow,pyav]==2.37.0
    kaggle==1.6.17
    lightning==2.5.0.post0
    matplotlib==3.10.0
    numpy==2.2.2
    Pillow==11.1.0
    pkgconfig==1.5.5
    rawpy==0.24.0
    scikit-learn==1.6.1
    scipy==1.15.1
    seaborn==0.13.2
    torch
    torchvision
    tqdm==4.67.1
    zarr==3.0.1
    requests==2.32.3

# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >=3.13

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
cuda =
    cupy-cuda12x==13.3.0

testing =
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = dataset_format_benchmark.module:function
# For example:
# console_scripts =
#     fibonacci = dataset_format_benchmark.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov dataset_format_benchmark --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.2.3
package = dataset_format_benchmark
